// MongoDB Schema for Portfolio Management System

// Portfolio Item Collection Schema
// Collection name: portfolioItems

/*
Portfolio Item Structure:
{
  _id: ObjectId (auto-generated by MongoDB),
  name: String (required) - Asset name like "Apple Inc.", "Bitcoin"
  type: String (required) - Asset type: stock, bond, crypto, mutual_fund, etf, real_estate, commodity
  quantity: Number (required) - Quantity of assets owned
  purchasePrice: Number (required) - Price per unit when purchased
  purchaseDate: Date (required) - When the asset was purchased
  createdAt: Date (auto-generated) - When the item was added
  updatedAt: Date (auto-generated) - When the item was last updated
}

Example document:
{
  "_id": ObjectId("507f1f77bcf86cd799439011"),
  "name": "Apple Inc.",
  "type": "stock",
  "quantity": 100,
  "purchasePrice": 150.50,
  "purchaseDate": ISODate("2024-01-15T00:00:00Z"),
  "createdAt": ISODate("2024-01-15T10:30:00Z"),
  "updatedAt": ISODate("2024-01-15T10:30:00Z")
}
*/

// MongoDB schema validation rules
const portfolioItemValidation = {
  $jsonSchema: {
    bsonType: "object",
    required: ["name", "type", "quantity", "purchasePrice", "purchaseDate"],
    properties: {
      name: {
        bsonType: "string",
        minLength: 1,
        maxLength: 100,
        description: "Asset name - required string between 1-100 characters"
      },
      type: {
        bsonType: "string",
        enum: ["stock", "bond", "crypto", "mutual_fund", "etf", "real_estate", "commodity"],
        description: "Asset type - must be one of the valid types"
      },
      quantity: {
        bsonType: "number",
        minimum: 0,
        description: "Quantity of assets - required positive number"
      },
      purchasePrice: {
        bsonType: "number",
        minimum: 0,
        description: "Purchase price per unit - required positive number"
      },
      purchaseDate: {
        bsonType: "date",
        description: "Purchase date - required date"
      },
      createdAt: {
        bsonType: "date",
        description: "Creation timestamp"
      },
      updatedAt: {
        bsonType: "date", 
        description: "Last update timestamp"
      }
    }
  }
};

// Index definitions for better query performance
const portfolioItemIndexes = [
  { name: 1 }, // Index on asset name for fast lookups
  { type: 1 }, // Index on asset type
  { createdAt: -1 },  // Index on creation date (newest first)
  { name: 1, type: 1 }, // Compound index for name + type queries
  { purchaseDate: -1 } // Index on purchase date
];

module.exports = {
  portfolioItemValidation,
  portfolioItemIndexes
};
